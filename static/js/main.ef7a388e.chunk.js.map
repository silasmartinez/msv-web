{"version":3,"sources":["components/common/NavBar.js","components/form/FormInputText.js","components/form/FormInputMultiCheckbox.js","components/form/FormInputDropdown.js","components/form/FormInputDate.js","components/form/FormInputSlider.js","components/form/FormInputRadio.js","Form.js","components/router/index.js","App.js","index.js"],"names":["NavBar","to","FormInputText","name","control","label","render","field","onChange","value","error","fieldState","formState","TextField","helperText","message","size","fullWidth","variant","options","FormInputMultiCheckbox","setValue","useState","selectedItems","setSelectedItems","useEffect","FormControl","FormLabel","component","map","option","FormControlLabel","Checkbox","checked","includes","indexOf","remaining","filter","item","prevItems","handleSelect","FormInputDropdown","InputLabel","Select","MenuItem","FormInputDate","utils","DateFnsUtils","defaultValue","Date","id","Math","random","rifmFormatter","val","replace","refuse","autoOk","KeyboardButtonProps","format","FormInputSlider","React","sliderValue","setSliderValue","handleChange","event","newValue","Slider","valueLabelDisplay","min","max","step","FormInputRadio","RadioGroup","singleOption","Radio","defaultValues","textValue","radioValue","checkboxValue","dateValue","dropdownValue","Form","methods","useForm","handleSubmit","reset","watch","Paper","style","display","gridRowGap","padding","margin","Typography","Button","onClick","data","console","log","MainRouter","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef7a388e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport const NavBar = () => (\n  <div>\n    <Link to=\"/page-1\">Page 1</Link>\n    <br />\n    <br />\n    <Link to=\"/FormElements\">Form Components</Link>\n  </div>\n);\n","import React from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport const FormInputText = ({ name, control, label }) => {\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({\n        field: { onChange, value },\n        fieldState: { error },\n        formState,\n      }) => (\n        <TextField\n          helperText={error ? error.message : null}\n          size=\"small\"\n          error={!!error}\n          onChange={onChange}\n          value={value}\n          fullWidth\n          label={label}\n          variant=\"outlined\"\n        />\n      )}\n    />\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst options = [\n  {\n    label: \"Checkbox Option 1\",\n    value: \"1\",\n  },\n  {\n    label: \"Checkbox Option 2\",\n    value: \"2\",\n  },\n];\n\nexport const FormInputMultiCheckbox = ({ name, control, setValue, label }) => {\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  const handleSelect = (value) => {\n    const isPresent = selectedItems.indexOf(value);\n    if (isPresent !== -1) {\n      const remaining = selectedItems.filter((item) => item !== value);\n      setSelectedItems(remaining);\n    } else {\n      setSelectedItems((prevItems) => [...prevItems, value]);\n    }\n  };\n\n  useEffect(() => {\n    setValue(name, selectedItems);\n  }, [selectedItems]);\n\n  return (\n    <FormControl size={\"small\"} variant={\"outlined\"}>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n\n      <div>\n        {options.map((option) => {\n          return (\n            <FormControlLabel\n              control={\n                <Controller\n                  name={name}\n                  render={({}) => {\n                    return (\n                      <Checkbox\n                        checked={selectedItems.includes(option.value)}\n                        onChange={() => handleSelect(option.value)}\n                      />\n                    );\n                  }}\n                  control={control}\n                />\n              }\n              label={option.label}\n              key={option.value}\n            />\n          );\n        })}\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst options = [\n  {\n    label: \"Dropdown Option 1\",\n    value: \"1\",\n  },\n  {\n    label: \"Dropdown Option 2\",\n    value: \"2\",\n  },\n];\n\nexport const FormInputDropdown = ({ name, control, label }) => {\n  const generateSingleOptions = () => {\n    return options.map((option) => {\n      return (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      );\n    });\n  };\n\n  return (\n    <FormControl size={\"small\"}>\n      <InputLabel>{label}</InputLabel>\n      <Controller\n        render={({ field: { onChange, value } }) => (\n          <Select onChange={onChange} value={value}>\n            {generateSingleOptions()}\n          </Select>\n        )}\n        control={control}\n        name={name}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { Controller } from \"react-hook-form\";\nconst DATE_FORMAT = \"dd-MMM-yy\";\n\nexport const FormInputDate = ({ name, control, label }) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Controller\n        name={name}\n        control={control}\n        render={({ field, fieldState, formState }) => (\n          <KeyboardDatePicker\n            fullWidth\n            variant=\"inline\"\n            defaultValue={new Date()}\n            id={`date-${Math.random()}`}\n            label={label}\n            rifmFormatter={(val) => val.replace(/[^[a-zA-Z0-9-]*$]+/gi, \"\")}\n            refuse={/[^[a-zA-Z0-9-]*$]+/gi}\n            autoOk\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n            format={DATE_FORMAT}\n            {...field}\n          />\n        )}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { FormLabel, Slider } from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nexport const FormInputSlider = ({ name, control, setValue, label }) => {\n  const [sliderValue, setSliderValue] = React.useState(30);\n\n  useEffect(() => {\n    if (sliderValue) setValue(name, sliderValue);\n  }, [sliderValue]);\n\n  const handleChange = (event, newValue) => {\n    setSliderValue(newValue);\n  };\n\n  return (\n    <>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Controller\n        name={name}\n        control={control}\n        render={({ field, fieldState, formState }) => (\n          <Slider\n            value={sliderValue}\n            onChange={handleChange}\n            valueLabelDisplay=\"auto\"\n            min={0}\n            max={100}\n            step={1}\n          />\n        )}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst options = [\n  {\n    label: \"Radio Option 1\",\n    value: \"1\",\n  },\n  {\n    label: \"Radio Option 2\",\n    value: \"2\",\n  },\n];\n\nexport const FormInputRadio = ({ name, control, label }) => {\n  const generateRadioOptions = () => {\n    return options.map((singleOption) => (\n      <FormControlLabel\n        value={singleOption.value}\n        label={singleOption.label}\n        control={<Radio />}\n      />\n    ));\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Controller\n        name={name}\n        control={control}\n        render={({\n          field: { onChange, value },\n          fieldState: { error },\n          formState,\n        }) => (\n          <RadioGroup value={value} onChange={onChange}>\n            {generateRadioOptions()}\n          </RadioGroup>\n        )}\n      />\n    </FormControl>\n  );\n};\n","import { Button, Paper, Typography } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n\nimport { FormInputText } from \"./components/form/FormInputText\";\nimport { FormInputMultiCheckbox } from \"./components/form/FormInputMultiCheckbox\";\nimport { FormInputDropdown } from \"./components/form/FormInputDropdown\";\nimport { FormInputDate } from \"./components/form/FormInputDate\";\nimport { FormInputSlider } from \"./components/form/FormInputSlider\";\nimport { FormInputRadio } from \"./components/form/FormInputRadio\";\n\nconst defaultValues = {\n  textValue: \"\",\n  radioValue: \"\",\n  checkboxValue: [],\n  dateValue: new Date(),\n  dropdownValue: \"\",\n  sliderValue: 0,\n};\nexport const Form = () => {\n  const methods = useForm({ defaultValues: defaultValues });\n  const { handleSubmit, reset, control, setValue, watch } = methods;\n  const onSubmit = (data) => console.log(data);\n\n  return (\n    <Paper\n      style={{\n        display: \"grid\",\n        gridRowGap: \"20px\",\n        padding: \"20px\",\n        margin: \"10px 300px\",\n      }}\n    >\n      <Typography variant=\"h6\"> Form Demo</Typography>\n\n      <FormInputText name=\"textValue\" control={control} label=\"Text Input\" />\n      <FormInputRadio\n        name={\"radioValue\"}\n        control={control}\n        label={\"Radio Input\"}\n      />\n      <FormInputDropdown\n        name=\"dropdownValue\"\n        control={control}\n        label=\"Dropdown Input\"\n      />\n      <FormInputDate name=\"dateValue\" control={control} label=\"Date Input\" />\n      <FormInputMultiCheckbox\n        control={control}\n        setValue={setValue}\n        name={\"checkboxValue\"}\n        label={\"Checkbox Input\"}\n      />\n      <FormInputSlider\n        name={\"sliderValue\"}\n        control={control}\n        setValue={setValue}\n        label={\"Slider Input\"}\n      />\n\n      <Button onClick={handleSubmit(onSubmit)} variant={\"contained\"}>\n        {\" \"}\n        Submit{\" \"}\n      </Button>\n      <Button onClick={() => reset()} variant={\"outlined\"}>\n        {\" \"}\n        Reset{\" \"}\n      </Button>\n      <Link to=\"/\">return</Link>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { NavBar } from \"../common/NavBar\";\nimport { Form } from \"../../Form\";\n\nexport const MainRouter = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={NavBar} />\n      <Route path=\"/FormElements\" component={Form} />\n      {/*<Route path=\"/page-2\" component={PageTwo} />*/}\n    </Switch>\n  </Router>\n);\n","import React from \"react\";\nimport { MainRouter } from \"./components/router\";\n\nfunction App() {\n  return (\n    <div>\n      <MainRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}